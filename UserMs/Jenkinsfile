pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'satyamkant/blog-userms:latest'
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository...'
                // Pull the latest code from the GitHub repo
                git url: 'https://github.com/satyamkant/ProjectPi.git', branch: 'main'
            }
        }

        stage('Build Backend Application') {
            steps {
                echo 'Building Spring Boot application with Maven...'
                // Run Maven clean and package to build the Spring Boot application
                script {
                    dir('Portfolio/backend/UserMs') {
                        sh 'mvn clean package -X' // clean and package
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                // Build the Docker image from the Dockerfile
                script {
                    dir('Portfolio/backend/UserMs') {
                        sh 'docker build -t $DOCKER_IMAGE .'
                    }
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                echo 'Deploying Docker container...'
                // Stop any running container with the same name and start the new one
                script {
                    sh '''
                    docker stop BlogUserMs || true
                    docker rm BlogUserMs || true
                    docker run -d --name BlogUserMs --network ProjectPi --restart always -p 2003:2003 $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Cleanup') {
            steps {
                echo 'Cleaning up unused Docker images...'
                sh 'docker image prune -f'
                sh 'docker builder prune --all -f'
                sh 'docker system prune -f --volumes'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()  // Clean the workspace after the pipeline run
        }
        success {
            echo 'Deployment successful.'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}